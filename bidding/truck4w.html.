<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ร่วมประมูลงานขนส่ง - เอส เอส แอล โลจิสติกส์</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Font: Kanit -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Kanit', sans-serif;
            background-color: #f0fdf4; /* green-50 */
        }
        .step {
            display: none;
        }
        .step.active {
            display: block;
        }
        .form-input.invalid {
            border-color: #ef4444; /* red-500 */
        }
        .error-message {
            color: #ef4444; /* red-500 */
            font-size: 0.875rem; /* text-sm */
            margin-top: 0.25rem; /* mt-1 */
        }
        /* Watermark Style */
        .watermark-bg {
            position: relative;
            z-index: 1;
        }
        .watermark-bg::before {
            content: "";
            position: absolute;
            top: 50%;
            left: 50%;
            width: 80%;
            height: 80%;
            transform: translate(-50%, -50%);
            background-image: url('https://googleusercontent.com/file_content/1');
            background-repeat: no-repeat;
            background-position: center;
            background-size: contain;
            opacity: 0.05;
            z-index: -1;
        }
        /* Style for selected job card */
        .job-card.selected {
            border-color: #eab308; /* yellow-500 */
            box-shadow: 0 0 0 2px #eab308;
        }
        /* Custom file input */
        .file-input-label {
            cursor: pointer;
            display: inline-block;
            padding: 0.5rem 1rem;
            color: white;
            background-color: #0d9488; /* teal-600 */
            border-radius: 0.5rem;
            transition: background-color 0.3s;
        }
        .file-input-label:hover {
            background-color: #0f766e; /* teal-700 */
        }
        #slip-preview {
            max-width: 100%;
            max-height: 200px;
            margin-top: 1rem;
            border-radius: 0.5rem;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body class="text-gray-800">

    <div class="container mx-auto p-4 sm:p-6 md:p-8">
        <!-- Header -->
        <header class="text-center mb-8">
            <h1 class="text-3xl md:text-4xl font-bold text-green-800">ร่วมประมูลงานขนส่ง</h1>
            <p class="text-lg md:text-xl text-gray-600 mt-2">ประมูลงานขนส่งกับบริษัท ฯ ชั้นนำ ผ่านบริษัท เอส เอส แอล โลจิสติกส์</p>
        </header>

        <div id="auction-form-container" class="bg-white p-6 rounded-lg shadow-md max-w-4xl mx-auto watermark-bg">
            <!-- Step 1: Auction Conditions -->
            <section id="step-1" class="step active">
                <h2 class="text-2xl font-bold mb-4 border-b pb-2 text-green-700">เงื่อนไขการประมูล</h2>
                <div class="prose max-w-none text-gray-700 space-y-6">
                    <div>
                        <h4 class="font-bold text-lg text-gray-800">บทบาทของบริษัทฯ</h4>
                        <p class="text-justify">บริษัท เอสเอสแอล โลจิสติกส์ จำกัด ทำหน้าที่เป็นเพียง <strong>ตัวกลาง</strong> ในการประสานงานและส่งต่อข้อเสนอราคาค่าขนส่งระหว่างท่านกับบริษัทต้นทางเท่านั้น บริษัทฯ ไม่ได้เป็นคู่สัญญา ในงานขนส่ง การอนุมัติและคัดเลือกราคาค่าขนส่งทั้งหมดเป็นดุลยพินิจของบริษัทต้นทางแต่เพียงผู้เดียว ดังนั้น บริษัทฯ จะไม่รับผิดชอบต่อความเสียหาย ค่าใช้จ่าย หรือหนี้สินใด ๆ ที่เกิดขึ้นจากการขนส่ง</p>
                    </div>
                    <div>
                        <h4 class="font-bold text-lg text-gray-800">ค่าดำเนินการ</h4>
                        <p class="text-justify">บริษัทฯ ขอเรียกเก็บเฉพาะ <strong>ค่าดำเนินการ</strong> เพื่ออำนวยความสะดวกในการรับส่งข้อมูลสำหรับประกอบการประเมินเท่านั้น โดยคิดค่าธรรมเนียมดังนี้:</p>
                        <ul class="list-disc list-inside space-y-1 pl-4">
                            <li>รถ 4 ล้อ: 100 บาท/เส้นทาง</li>
                            <li>รถ 6 ล้อ และ 10 ล้อ: 150 บาท/เส้นทาง</li>
                            <li>รถเทรลเลอร์: 200 บาท/เส้นทาง</li>
                        </ul>
                        <p class="text-sm italic mt-2">ค่าดำเนินการนี้เป็นเพียงค่าธรรมเนียมในการดำเนินการ ไม่รับประกันว่าท่านจะได้รับงาน</p>
                    </div>
                    <div>
                        <h4 class="font-bold text-lg text-gray-800">ข้อกำหนดทั่วไป</h4>
                        <ul class="list-disc list-inside space-y-2 pl-4">
                            <li>ผู้เข้าร่วมประมูลต้องกรอกข้อมูลที่เป็นจริงและสามารถตรวจสอบได้</li>
                            <li>การเสนอราคาต้องเป็นตัวเลขเท่านั้น และมีหน่วยเป็น บาทไทย (THB)</li>
                            <li>ผู้ชนะการประมูลจะได้รับการติดต่อกลับจากเจ้าหน้าที่ภายใน 24 ชั่วโมง หลังสิ้นสุดการประมูล</li>
                            <li>บริษัทฯ ขอสงวนสิทธิ์ในการยกเลิกหรือเปลี่ยนแปลงการประมูลโดยไม่ต้องแจ้งให้ทราบล่วงหน้า และการตัดสินของ บริษัท เจ้าของงานประมูล ถือเป็นที่สิ้นสุด</li>
                        </ul>
                    </div>
                </div>
            </section>

            <!-- Step 2: Bidder Information -->
            <section id="step-2" class="step">
                <h2 class="text-2xl font-bold mb-4 border-b pb-2 text-green-700">ข้อมูลผู้ประมูล</h2>
                <form id="bidder-form" class="grid grid-cols-1 md:grid-cols-2 gap-6" novalidate>
                    <div>
                        <label for="fullName" class="block text-sm font-medium text-gray-700 mb-1">ชื่อ-นามสกุล</label>
                        <input type="text" id="fullName" name="fullName" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500" placeholder="กรอกชื่อและนามสกุล" required>
                        <div class="error-message"></div>
                    </div>
                    <div>
                        <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">เบอร์โทรศัพท์</label>
                        <input type="tel" id="phone" name="phone" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500" placeholder="08xxxxxxxx" required pattern="[0-9]{10}">
                        <div class="error-message"></div>
                    </div>
                    <div class="md:col-span-2">
                        <label for="email" class="block text-sm font-medium text-gray-700 mb-1">E-mail</label>
                        <input type="email" id="email" name="email" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500" placeholder="example@email.com" required>
                        <div class="error-message"></div>
                    </div>
                    <div class="md:col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-2">ประเภทผู้ประมูล</label>
                        <div class="flex items-center space-x-6">
                            <div class="flex items-center">
                                <input id="type-individual" name="bidderType" type="radio" value="individual" class="h-4 w-4 text-green-600 border-gray-300 focus:ring-green-500" checked>
                                <label for="type-individual" class="ml-2 block text-sm text-gray-900">บุคคลธรรมดา</label>
                            </div>
                            <div class="flex items-center">
                                <input id="type-corporate" name="bidderType" type="radio" value="corporate" class="h-4 w-4 text-green-600 border-gray-300 focus:ring-green-500">
                                <label for="type-corporate" class="ml-2 block text-sm text-gray-900">นิติบุคคล</label>
                            </div>
                        </div>
                    </div>
                    <div id="companyNameContainer" class="md:col-span-2 hidden">
                        <label for="companyName" class="block text-sm font-medium text-gray-700 mb-1">ชื่อบริษัท</label>
                        <input type="text" id="companyName" name="companyName" class="form-input w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500" placeholder="ระบุชื่อบริษัท">
                        <div class="error-message"></div>
                    </div>
                </form>
            </section>

            <!-- Step 3: Job Selection -->
            <section id="step-3" class="step">
                <h2 class="text-2xl font-bold mb-4 border-b pb-2 text-green-700">เลือกงานประมูล</h2>
                <div id="job-selection-error-container" class="mb-4"></div>
                <div id="auction-cards-container" class="space-y-6">
                    <!-- Auction cards for selection will be dynamically inserted here -->
                </div>
            </section>

            <!-- Step 4: Summary & Payment -->
            <section id="step-4" class="step">
                <h2 class="text-2xl font-bold mb-4 border-b pb-2 text-green-700">สรุปรายการและชำระค่าธรรมเนียม</h2>
                <div id="summary-container" class="space-y-2 mb-6"></div>
                <div class="bg-green-50 border border-green-200 rounded-lg p-4 text-center">
                    <p class="text-lg text-gray-700">รวมค่าธรรมเนียมการประมูล</p>
                    <p id="total-fee" class="text-3xl font-bold text-green-800 my-2">0 บาท</p>
                    <p id="countdown-timer" class="text-lg font-bold text-red-600 my-2"></p>
                    <div class="my-4 text-gray-800">
                        <p><strong>ธนาคาร:</strong> กสิกรไทย</p>
                        <p><strong>เลขที่บัญชี:</strong> 719-1-01475-2</p>
                        <p><strong>ชื่อบัญชี:</strong> บริษัท เอส เอส แอล โลจิสติกส์ จำกัด</p>
                    </div>
                    <p class="text-sm text-gray-600 mb-4">กรุณาโอนเงินและแนบสลิปเพื่อยืนยัน</p>
                    <input type="file" id="slip-upload" class="hidden" accept="image/*">
                    <label for="slip-upload" class="file-input-label">
                        <span>แนบสลิปการโอนเงิน</span>
                    </label>
                    <p id="slip-filename" class="text-sm text-gray-500 mt-2"></p>
                    <img id="slip-preview" class="hidden" alt="Slip Preview">
                </div>
            </section>

            <!-- Step 5: Bidding -->
            <section id="step-5" class="step">
                <h2 class="text-2xl font-bold mb-4 border-b pb-2 text-green-700">กรอกราคาประมูล</h2>
                <div id="bid-error-container" class="mb-4"></div>
                <div id="bidding-cards-container" class="space-y-6">
                    <!-- Selected cards for bidding will be dynamically inserted here -->
                </div>
            </section>
            
            <!-- Navigation Buttons -->
            <div id="navigation-buttons" class="mt-8 pt-4 border-t flex items-center">
                <button id="prevBtn" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-6 rounded-lg transition duration-300">
                    ย้อนกลับ
                </button>
                <button id="nextBtn" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-12 rounded-lg transition duration-300 inline-flex items-center justify-center">
                     <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    <span id="nextBtn-text">ยอมรับเงื่อนไขการประมูล</span>
                </button>
                <button id="submitBtn" class="bg-teal-600 hover:bg-teal-700 text-white font-bold py-2 px-6 rounded-lg transition duration-300 hidden items-center justify-center">
                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    <span>ส่งข้อมูลการประมูล</span>
                </button>
            </div>
        </div>
        
        <!-- Success Message -->
        <div id="success-message" class="hidden text-center bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg relative max-w-4xl mx-auto" role="alert">
            <strong class="font-bold">ส่งข้อมูลสำเร็จ!</strong>
            <span class="block sm:inline">เราได้รับข้อมูลการประมูลของคุณแล้ว ขอบคุณครับ</span>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- URL for Google Apps Script ---
            const SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbyvF7qZRjGv4C5VFClTv5ugW2NkYG3YinrwEk43qx8AbGxVTOiBzG4VekDn10D7e6SUtQ/exec'; 

            // --- State and DOM Elements ---
            let currentStep = 1;
            const steps = document.querySelectorAll('.step');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const nextBtnText = document.getElementById('nextBtn-text');
            const submitBtn = document.getElementById('submitBtn');
            const bidderForm = document.getElementById('bidder-form');
            const navContainer = document.getElementById('navigation-buttons');
            const slipUploadInput = document.getElementById('slip-upload');
            const slipFilenameDisplay = document.getElementById('slip-filename');
            const slipPreview = document.getElementById('slip-preview');
            const countdownTimerEl = document.getElementById('countdown-timer');
            
            let selectedJobIndices = new Set();
            let slipFile = null;
            let step4LoadTime = null;
            let countdownInterval = null;

            // --- Auction Data ---
            const auctionData = [
                { company: "บริษัท ปลูกผักเพราะรักแม่ จำกัด", vehicleType1: "4 ล้อ", vehicleType2: "ตู้", jobType: "เหมาเที่ยว", origin: "กรุงเทพมหานคร", destination: "ขอนแก่น", productType: "สินค้าอุปโภคบริโภค", weightKg: 1500, details: "" },
                { company: "บริษัท ปลูกผักเพราะรักแม่ จำกัด", vehicleType1: "4 ล้อ", vehicleType2: "ตู้", jobType: "เหมาเที่ยว", origin: "กรุงเทพมหานคร", destination: "ชลบุรี", productType: "สินค้าอุปโภคบริโภค", weightKg: 1500, details: "" },
                { company: "บริษัท ปลูกผักเพราะรักแม่ จำกัด", vehicleType1: "4 ล้อ", vehicleType2: "ตู้", jobType: "เหมาเที่ยว", origin: "กรุงเทพมหานคร", destination: "สมุทรปราการ", productType: "สินค้าอุปโภคบริโภค", weightKg: 1500, details: "" },
                { company: "บริษัท ปลูกผักเพราะรักแม่ จำกัด", vehicleType1: "4 ล้อ", vehicleType2: "ตู้", jobType: "เหมาเที่ยว", origin: "กรุงเทพมหานคร", destination: "เชียงใหม่", productType: "สินค้าอุปโภคบริโภค", weightKg: 1500, details: "" },
                { company: "บริษัท ปลูกผักเพราะรักแม่ จำกัด", vehicleType1: "4 ล้อ", vehicleType2: "ตู้", jobType: "เหมาเที่ยว", origin: "กรุงเทพมหานคร", destination: "ภูเก็ต", productType: "สินค้าอุปโภคบริโภค", weightKg: 1500, details: "" },
                { company: "บริษัท ปลูกผักเพราะรักแม่ จำกัด", vehicleType1: "4 ล้อ", vehicleType2: "ตู้", jobType: "เหมาเที่ยว", origin: "กรุงเทพมหานคร", destination: "สุราษฎร์ธานี", productType: "สินค้าอุปโภคบริโภค", weightKg: 1500, details: "" },
                { company: "บริษัท ปลูกผักเพราะรักแม่ จำกัด", vehicleType1: "4 ล้อ", vehicleType2: "ตู้", jobType: "เหมาเที่ยว", origin: "กรุงเทพมหานคร", destination: "สงขลา", productType: "สินค้าอุปโภคบริโภค", weightKg: 1500, details: "ต้องการรถด่วน" }
            ];

            // --- Functions ---

            function startCountdown() {
                const fiveMinutes = 5 * 60 * 1000;
                const deadline = new Date().getTime() + fiveMinutes;

                countdownInterval = setInterval(() => {
                    const now = new Date().getTime();
                    const remaining = deadline - now;

                    if (remaining < 0) {
                        clearInterval(countdownInterval);
                        showGenericError('summary-container', 'หมดเวลาสำหรับทำรายการ กรุณาเริ่มต้นใหม่');
                        
                        setTimeout(() => {
                            currentStep = 1;
                            showStep(1);
                            clearGenericError('summary-container');
                        }, 2500);
                        return;
                    }

                    const minutes = Math.floor((remaining % (1000 * 60 * 60)) / (1000 * 60));
                    const seconds = Math.floor((remaining % (1000 * 60)) / 1000);

                    countdownTimerEl.textContent = `กรุณาทำรายการภายใน: ${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                }, 1000);
            }

            function showStep(stepNumber) {
                if (countdownInterval) {
                    clearInterval(countdownInterval);
                    countdownInterval = null;
                }

                steps.forEach(step => step.classList.remove('active'));
                document.getElementById(`step-${stepNumber}`).classList.add('active');
                
                if (stepNumber === 4) {
                    step4LoadTime = new Date();
                    startCountdown();
                }
                updateButtons();
            }

            function updateButtons() {
                prevBtn.style.display = (currentStep === 1) ? 'none' : 'inline-block';
                
                const isLastStep = currentStep === 5;
                nextBtn.style.display = isLastStep ? 'none' : 'inline-block';
                submitBtn.style.display = isLastStep ? 'flex' : 'none';

                navContainer.classList.remove('justify-center', 'justify-between');
                if (currentStep === 1) {
                    nextBtnText.textContent = 'ยอมรับเงื่อนไขการประมูล';
                    navContainer.classList.add('justify-center');
                } else if (currentStep === 3) {
                    nextBtnText.textContent = 'เลือกงานประมูล';
                    navContainer.classList.add('justify-between');
                } else if (currentStep === 4) {
                    nextBtnText.textContent = 'ยืนยันการโอนเงิน';
                    navContainer.classList.add('justify-between');
                } else {
                    nextBtnText.textContent = 'ถัดไป';
                    navContainer.classList.add('justify-between');
                }
            }

            function toggleCompanyField() {
                const corporateRadio = document.getElementById('type-corporate');
                const companyNameContainer = document.getElementById('companyNameContainer');
                const companyNameInput = document.getElementById('companyName');
                if (corporateRadio.checked) {
                    companyNameContainer.classList.remove('hidden');
                    companyNameInput.required = true;
                } else {
                    companyNameContainer.classList.add('hidden');
                    companyNameInput.required = false;
                    clearInputError(companyNameInput);
                }
            }

            function populateAuctionCards() {
                const container = document.getElementById('auction-cards-container');
                container.innerHTML = ''; 
                auctionData.forEach((item, index) => {
                    const vehicle = `${item.vehicleType1} ${item.vehicleType2}`;
                    const card = `
                        <div class="job-card bg-white border border-gray-200 rounded-lg shadow-sm transition hover:shadow-lg overflow-hidden" data-index="${index}">
                            <div class="bg-green-100 p-3 border-b border-green-200">
                                <div class="flex items-center text-gray-700">
                                    <span class="font-bold text-lg text-green-800">${item.origin}</span>
                                    <div class="flex-grow border-t-2 border-dotted border-gray-400 mx-4"></div>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-1 text-red-600" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" /></svg>
                                    <span class="font-bold text-lg text-green-800">${item.destination}</span>
                                </div>
                            </div>
                            <div class="p-4">
                                <div class="grid grid-cols-2 gap-4 text-sm mb-4">
                                    <div class="flex items-center text-gray-600"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path d="M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z" /><path d="M3 4a1 1 0 00-1 1v10a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H10a1 1 0 001-1V5a1 1 0 00-1-1H3zM14 7a1 1 0 00-1-1h-1v6a1 1 0 001 1h1a1 1 0 001-1V7a1 1 0 00-1-1z" /></svg><div><strong class="font-medium">ประเภทรถ:</strong> ${vehicle}</div></div>
                                    <div class="flex items-center text-gray-600"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" /></svg><div><strong class="font-medium">การขนส่ง:</strong> ${item.jobType}</div></div>
                                    <div class="flex items-center text-gray-600"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path d="M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" /><path d="M2 12a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2z" /></svg><div><strong class="font-medium">ประเภทสินค้า:</strong> ${item.productType}</div></div>
                                    <div class="flex items-center text-gray-600"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3" /></svg><div><strong class="font-medium">น้ำหนัก (กก.):</strong> ${item.weightKg.toLocaleString()}</div></div>
                                </div>
                                <div class="text-sm text-gray-600 flex items-center col-span-2"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" /></svg><div><strong class="font-medium">รายละเอียดอื่นๆ:</strong> ${item.details || '-'}</div></div>
                            </div>
                            <div class="p-4 bg-gray-50 flex flex-col items-center">
                                <button class="select-job-btn bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-6 rounded-lg transition duration-300 w-full max-w-xs">
                                    เลือกงานนี้
                                </button>
                            </div>
                        </div>
                    `;
                    container.innerHTML += card;
                });
            }

            function populateSummaryAndPayment() {
                const summaryContainer = document.getElementById('summary-container');
                const totalFeeEl = document.getElementById('total-fee');
                summaryContainer.innerHTML = '';
                let totalFee = 0;

                const feeMap = { '4 ล้อ': 100, '6 ล้อ': 150, '10 ล้อ': 150, 'เทรลเลอร์': 200 };

                selectedJobIndices.forEach(index => {
                    const item = auctionData[index];
                    const fee = feeMap[item.vehicleType1] || 100; // Default fee
                    totalFee += fee;
                    const summaryItem = `
                        <div class="flex justify-between items-center text-gray-700">
                            <span>- ${item.origin} ไป ${item.destination} (${item.vehicleType1})</span>
                            <span class="font-medium">${fee} บาท</span>
                        </div>
                    `;
                    summaryContainer.innerHTML += summaryItem;
                });
                totalFeeEl.textContent = `${totalFee.toLocaleString()} บาท`;
                totalFeeEl.dataset.rawAmount = totalFee;
            }

            function populateBiddingForm() {
                const container = document.getElementById('bidding-cards-container');
                container.innerHTML = '';
                selectedJobIndices.forEach(index => {
                    const item = auctionData[index];
                    const vehicle = `${item.vehicleType1} ${item.vehicleType2}`;
                    const card = `
                        <div class="bg-white border border-gray-200 rounded-lg shadow-sm overflow-hidden" data-index="${index}">
                            <div class="bg-green-100 p-3 border-b border-green-200">
                                <div class="flex items-center text-gray-700">
                                    <span class="font-bold text-lg text-green-800">${item.origin}</span>
                                    <div class="flex-grow border-t-2 border-dotted border-gray-400 mx-4"></div>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-1 text-red-600" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" /></svg>
                                    <span class="font-bold text-lg text-green-800">${item.destination}</span>
                                </div>
                            </div>
                            <div class="p-4 grid grid-cols-1 md:grid-cols-3 gap-4 items-center">
                                <!-- Left Side: Details -->
                                <div class="md:col-span-2 space-y-3">
                                    <div class="text-sm text-gray-600">
                                        <strong class="font-medium">บริษัทเจ้าของงาน:</strong> ${item.company}
                                    </div>
                                    <div class="grid grid-cols-2 gap-4 text-sm">
                                        <div class="flex items-center text-gray-600"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path d="M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z" /><path d="M3 4a1 1 0 00-1 1v10a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H10a1 1 0 001-1V5a1 1 0 00-1-1H3zM14 7a1 1 0 00-1-1h-1v6a1 1 0 001 1h1a1 1 0 001-1V7a1 1 0 00-1-1z" /></svg><div><strong class="font-medium">ประเภทรถ:</strong> ${vehicle}</div></div>
                                        <div class="flex items-center text-gray-600"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" /></svg><div><strong class="font-medium">การขนส่ง:</strong> ${item.jobType}</div></div>
                                        <div class="flex items-center text-gray-600"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path d="M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" /><path d="M2 12a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2z" /></svg><div><strong class="font-medium">ประเภทสินค้า:</strong> ${item.productType}</div></div>
                                        <div class="flex items-center text-gray-600"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3" /></svg><div><strong class="font-medium">น้ำหนัก (กก.):</strong> ${item.weightKg.toLocaleString()}</div></div>
                                    </div>
                                    <div class="text-sm text-gray-600 col-span-2 flex items-center"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" /></svg><div><strong class="font-medium">รายละเอียดอื่นๆ:</strong> ${item.details || '-'}</div></div>
                                </div>
                                <!-- Right Side: Bidding Input -->
                                <div class="flex flex-col items-center justify-center bg-gray-50 p-4 rounded-lg h-full">
                                    <label for="bid_price_${index}" class="font-bold text-gray-800 mb-2 block text-center">ราคาที่เสนอ (บาท)</label>
                                    <input type="number" id="bid_price_${index}" name="bid_price_${index}" class="w-full max-w-xs text-center px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 text-lg font-bold" placeholder="0.00" min="1" required>
                                </div>
                            </div>
                        </div>
                    `;
                    container.innerHTML += card;
                });
            }
            
            function clearInputError(input) {
                input.classList.remove('invalid');
                const errorContainer = input.parentElement.querySelector('.error-message');
                if (errorContainer) {
                    errorContainer.textContent = '';
                }
            }

            function validateBidderForm() {
                let isValid = true;
                bidderForm.querySelectorAll('.form-input[required]').forEach(input => {
                    if (!input.validity.valid) {
                        isValid = false;
                        input.classList.add('invalid');
                        const errorContainer = input.parentElement.querySelector('.error-message');
                        if (errorContainer) {
                            if (input.validity.valueMissing) { errorContainer.textContent = 'กรุณากรอกข้อมูลนี้'; }
                            else if (input.validity.typeMismatch) { errorContainer.textContent = 'รูปแบบอีเมลไม่ถูกต้อง'; }
                            else if (input.validity.patternMismatch) { errorContainer.textContent = 'รูปแบบเบอร์โทรศัพท์ไม่ถูกต้อง (10 หลัก)'; }
                            else { errorContainer.textContent = input.validationMessage; }
                        }
                    } else {
                        clearInputError(input);
                    }
                });
                return isValid;
            }
            
            function showGenericError(containerId, message) {
                const errorContainer = document.getElementById(containerId);
                errorContainer.innerHTML = `<div class="text-center bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative" role="alert"><span class="block sm:inline">${message}</span></div>`;
            }

            function clearGenericError(containerId) {
                document.getElementById(containerId).innerHTML = '';
            }

            // --- Slip Verification and Proceed ---
            async function validateSlipAndProceed() {
                if (!slipFile) {
                    showGenericError('summary-container', 'กรุณาแนบสลิปการโอนเงินเพื่อดำเนินการต่อ');
                    return;
                }

                const spinner = nextBtn.querySelector('svg');
                nextBtn.disabled = true;
                spinner.classList.remove('hidden');
                nextBtnText.textContent = 'กำลังตรวจสอบสลิป...';

                try {
                    const base64String = await new Promise((resolve, reject) => {
                        const reader = new FileReader();
                        reader.readAsDataURL(slipFile);
                        reader.onload = () => resolve(reader.result.split(',')[1]);
                        reader.onerror = error => reject(error);
                    });

                    const totalFee = parseFloat(document.getElementById('total-fee').dataset.rawAmount);
                    const expectedRecipient = "บริษัท เอส เอส แอล โลจิสติกส์ จำกัด";

                    const prompt = `วิเคราะห์รูปภาพสลิปการโอนเงินนี้และดึงข้อมูลออกมาเป็น JSON ตาม schema ที่กำหนดเท่านั้น โดยให้ข้อมูลวันที่และเวลาอยู่ในรูปแบบ ISO 8601 ที่สมบูรณ์ (YYYY-MM-DDTHH:mm:ss.sssZ).`;
                    
                    const payload = {
                        contents: [{
                            parts: [
                                { text: prompt },
                                { inline_data: { mime_type: slipFile.type, data: base64String } }
                            ]
                        }],
                        generation_config: {
                            response_mime_type: "application/json",
                            response_schema: {
                                type: "OBJECT",
                                properties: {
                                    recipientName: { type: "STRING" },
                                    amount: { type: "NUMBER" },
                                    transferTimestamp: { type: "STRING", format: "date-time" }
                                },
                                required: ["recipientName", "amount", "transferTimestamp"]
                            }
                        }
                    };
                    
                    const apiKey = ""; // API key will be provided by the environment
                    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;

                    const response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(payload)
                    });

                    if (!response.ok) {
                        throw new Error(`API request failed with status ${response.status}`);
                    }

                    const result = await response.json();
                    
                    if (!result.candidates?.[0]?.content?.parts?.[0]?.text) {
                         throw new Error('ไม่สามารถวิเคราะห์ข้อมูลจากสลิปได้');
                    }

                    const slipData = JSON.parse(result.candidates[0].content.parts[0].text);

                    // --- Validation Logic ---
                    const normalizedRecipient = (slipData.recipientName || "")
                        .replace(/[\s.]+/g, "")
                        .toUpperCase();
                    const expectedKeywords = ["เอสเอสแอล", "SSL", "โลจิสติกส์", "LOGISTICS"];
                    const isRecipientValid = expectedKeywords.some(keyword => normalizedRecipient.includes(keyword.toUpperCase()));

                    if (!isRecipientValid) {
                         throw new Error(`ชื่อบัญชีผู้รับไม่ถูกต้อง (ต้องเป็น "${expectedRecipient}")`);
                    }
                    
                    if (Math.abs(parseFloat(slipData.amount) - totalFee) > 0.01) {
                        throw new Error(`จำนวนเงินไม่ถูกต้อง (ต้องเป็น ${totalFee} บาท)`);
                    }

                    const transferTime = new Date(slipData.transferTimestamp);
                    const now = new Date();
                    const timeDifferenceMilliseconds = now.getTime() - transferTime.getTime();

                    if (timeDifferenceMilliseconds < 0 || timeDifferenceMilliseconds > 300000) { // 300000 ms = 5 minutes
                        throw new Error('สลิปหมดอายุ (ต้องโอนเงินภายใน 5 นาทีล่าสุด)');
                    }
                    
                    // --- If all validations pass ---
                    clearGenericError('summary-container');
                    populateBiddingForm();
                    currentStep++;
                    showStep(currentStep);

                } catch (error) {
                    console.error('Slip validation error:', error);
                    showGenericError('summary-container', `ตรวจสอบสลิปไม่สำเร็จ: ${error.message}`);
                } finally {
                    nextBtn.disabled = false;
                    spinner.classList.add('hidden');
                    nextBtnText.textContent = 'ยืนยันการโอนเงิน';
                }
            }

            // --- Form Submission ---
            async function handleFormSubmit() {
                clearGenericError('bid-error-container');
                let allBidsValid = true;
                const biddingInputs = document.querySelectorAll('#bidding-cards-container input[type="number"]');
                for (const input of biddingInputs) {
                    if (!input.value || parseFloat(input.value) < 1) {
                        showGenericError('bid-error-container', 'กรุณากรอกราคาที่เสนอ (ต้องมากกว่า 0) สำหรับทุกงานที่เลือก');
                        input.focus();
                        allBidsValid = false;
                        break;
                    }
                }
                
                if (!allBidsValid || !validateBidderForm()) { return; }

                const spinner = submitBtn.querySelector('svg');
                const btnText = submitBtn.querySelector('span');
                submitBtn.disabled = true;
                spinner.classList.remove('hidden');
                btnText.textContent = 'กำลังส่งข้อมูล...';

                let slipData = null;
                if (slipFile) {
                     try {
                        const base64String = await new Promise((resolve, reject) => {
                            const reader = new FileReader();
                            reader.readAsDataURL(slipFile);
                            reader.onload = () => resolve(reader.result.split(',')[1]);
                            reader.onerror = error => reject(error);
                        });
                        slipData = { filename: slipFile.name, mimeType: slipFile.type, data: base64String };
                    } catch (error) {
                         console.error('Error reading file for submission:', error);
                    }
                }

                const bidderInfo = {
                    fullName: document.getElementById('fullName').value,
                    phone: document.getElementById('phone').value,
                    email: document.getElementById('email').value,
                    bidderType: document.querySelector('input[name="bidderType"]:checked').value,
                    companyName: document.getElementById('companyName').value || ''
                };

                const bids = [];
                selectedJobIndices.forEach(index => {
                    const priceInput = document.getElementById(`bid_price_${index}`);
                    bids.push({ ...auctionData[index], offeredPrice: priceInput.value });
                });

                const payload = { bidderInfo, bids, slip: slipData };
                const formData = new FormData();
                formData.append('payload', JSON.stringify(payload));

                try {
                    const response = await fetch(SCRIPT_URL, {
                        method: 'POST',
                        mode: 'no-cors', 
                        body: formData
                    });
                    
                    setTimeout(() => {
                        document.getElementById('auction-form-container').style.display = 'none';
                        document.getElementById('success-message').style.display = 'block';
                    }, 500);

                } catch (error) {
                    console.error('Error submitting form:', error);
                    showGenericError('bid-error-container', 'เกิดข้อผิดพลาดในการส่งข้อมูล กรุณาลองใหม่อีกครั้ง');
                } finally {
                     setTimeout(() => {
                        submitBtn.disabled = false;
                        spinner.classList.add('hidden');
                        btnText.textContent = 'ส่งข้อมูลการประมูล';
                    }, 500);
                }
            }


            // --- Event Listeners ---
            nextBtn.addEventListener('click', () => {
                if (currentStep === 2 && !validateBidderForm()) { return; }
                if (currentStep === 3) {
                    clearGenericError('job-selection-error-container');
                    if (selectedJobIndices.size === 0) {
                        showGenericError('job-selection-error-container', 'กรุณาเลือกงานที่ต้องการประมูลอย่างน้อย 1 งาน');
                        return;
                    }
                    populateSummaryAndPayment();
                }
                if (currentStep === 4) {
                    validateSlipAndProceed(); // This now handles validation and proceeding
                    return; // Stop the normal flow
                }

                if (currentStep < steps.length) {
                    currentStep++;
                    showStep(currentStep);
                }
            });

            prevBtn.addEventListener('click', () => {
                if (currentStep > 1) {
                    currentStep--;
                    showStep(currentStep);
                }
            });

            document.getElementById('auction-cards-container').addEventListener('click', (e) => {
                if (e.target.classList.contains('select-job-btn')) {
                    const button = e.target;
                    const card = button.closest('.job-card');
                    const index = parseInt(card.dataset.index, 10);
                    const isSelected = card.classList.toggle('selected');

                    if (isSelected) {
                        selectedJobIndices.add(index);
                        button.textContent = 'ยกเลิก';
                        button.classList.remove('bg-green-600', 'hover:bg-green-700');
                        button.classList.add('bg-yellow-500', 'hover:bg-yellow-600');
                    } else {
                        selectedJobIndices.delete(index);
                        button.textContent = 'เลือกงานนี้';
                        button.classList.remove('bg-yellow-500', 'hover:bg-yellow-600');
                        button.classList.add('bg-green-600', 'hover:bg-green-700');
                    }
                }
            });

            slipUploadInput.addEventListener('change', (e) => {
                if (e.target.files && e.target.files[0]) {
                    slipFile = e.target.files[0];
                    slipFilenameDisplay.textContent = slipFile.name;
                    const reader = new FileReader();
                    reader.onload = (event) => {
                        slipPreview.src = event.target.result;
                        slipPreview.classList.remove('hidden');
                    };
                    reader.readAsDataURL(slipFile);
                    clearGenericError('summary-container');
                }
            });

            document.getElementById('type-individual').addEventListener('change', toggleCompanyField);
            document.getElementById('type-corporate').addEventListener('change', toggleCompanyField);
            
            submitBtn.addEventListener('click', (e) => {
                e.preventDefault();
                handleFormSubmit();
            });
            
            // --- Initialization ---
            showStep(currentStep);
            populateAuctionCards();
        });
    </script>

</body>
</html>
